name: Docker push

on:
  workflow_run:
    workflows: ["Run tests"]
    types:
      - completed

jobs:
  push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract version from pyproject.toml
        id: extract_version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Compare versions
        id: compare_versions
        run: |
          if [ "$LATEST_TAG" = "$VERSION" ]; then
            echo "Version $VERSION is already up-to-date. Skipping build."
            exit 0
          fi
          echo "Version $VERSION is new. Proceeding with build."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/async-fastapi-s3:${{ env.VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/async-fastapi-s3:latest
